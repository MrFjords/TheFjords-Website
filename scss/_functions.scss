$no-mq-support:   false !default;

@function pxToEm($px, $base: $base-font-size) {
    @return ($px / $base) * 1em;
}

$serve-to-nomq-max-width: pxToEm($width-wrapper);

@mixin media-support($query) {
  @if $no-mq-support {
    @if $query < $serve-to-nomq-max-width {
      @content;
    }
  } @else {
    @media ( 'min-width:' + $query ) {
      @content;
    }
  }
}

@mixin media-support-retina($query) {
  @if $no-mq-support {
    
  } @else {
    @media
      only screen and (-webkit-min-device-pixel-ratio: 2)      and ( 'min-width:' + $query ),
      only screen and (   min--moz-device-pixel-ratio: 2)      and ( 'min-width:' + $query ),
      only screen and (     -o-min-device-pixel-ratio: 2/1)    and ( 'min-width:' + $query ),
      only screen and (        min-device-pixel-ratio: 2)      and ( 'min-width:' + $query ),
      only screen and (                min-resolution: 192dpi) and ( 'min-width:' + $query ),
      only screen and (                min-resolution: 2dppx)  and ( 'min-width:' + $query ) {
      
        @content;
    }
  }
}

@mixin support-retina() {
  @if $no-mq-support {
    
  } @else {
    @media
      only screen and (-webkit-min-device-pixel-ratio: 2),
      only screen and (   min--moz-device-pixel-ratio: 2),
      only screen and (     -o-min-device-pixel-ratio: 2/1),
      only screen and (        min-device-pixel-ratio: 2),
      only screen and (                min-resolution: 192dpi),
      only screen and (                min-resolution: 2dppx) {
      
        @content;
    }
  }
}
@mixin background-size($width, $height) {
  -webkit-background-size: $width $height;
  -moz-background-size: $width $height;
  -o-background-size: $width $height;
  background-size: $width $height;
}